@use '../../shared/constants.scss';

$BREAKPOINT1: constants.$BREAKPOINT1;
$BREAKPOINT2: constants.$BREAKPOINT2;
$BREAKPOINT3: constants.$BREAKPOINT3;

// Layout 1: CSS media query for the design of Mobile Portrait.
@keyframes fade-in-content {
  from {
    transform: scale(0.9);
  }
  to {
    transform: scale(1);
  }
}

@keyframes fade-in-overlay {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fade-out-content {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(0.9);
  }
}

@keyframes fade-out-overlay {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.section {
  // Properties relative to the element itself.
  padding: 0 16px;
  // Properties relative to its content elements.
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 16px;

  > div {
    // Properties relative to the element itself.
    border-radius: 8px;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
    cursor: pointer;
    // Properties relative to its content elements.
    display: flex;
    flex-direction: column;
    overflow: hidden;

    > .image {
      float: left;
      background-color: #42b078;
      position: relative;

      > img {
        display: block;
        position: relative;
        max-width: none;
        width: calc(100% + 20px);
        transition: opacity 0.35s, transform 0.35s;
        transform: translate3d(-10px, 0, 0);
        backface-visibility: hidden;
      }

      &:hover > img {
        opacity: 0.4;
        filter: alpha(opacity=40);
        transform: translate3d(0, 0, 0);
      }

      > div {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;
        position: absolute;
        overflow: hidden;
        top: 0;
        left: 0;

        > h2 {
          font-size: 12px;
          color: #fff;
          text-align: center;
          position: relative;
          overflow: hidden;
          padding: 0.5em 0;
          background-color: transparent;
          opacity: 0;
        }

        > h2:after {
          position: absolute;
          bottom: 0;
          left: 0;
          width: 100%;
          height: 2px;
          margin-bottom: 4px;
          background: #fff;
          content: '';
          transition: transform 0.35s;
          transform: translate3d(-100%, 0, 0);
        }

        > span {
          font-size: 10px;
          color: #fff;
          opacity: 0;
          filter: alpha(opacity=0);
          transition: opacity 0.35s, transform 0.35s;
          transform: translate3d(100%, 0, 0);
        }
      }

      &:hover h2 {
        opacity: 1;
      }

      &:hover h2:after {
        transform: translate3d(0, 0, 0);
      }

      &:hover span {
        opacity: 1;
        filter: alpha(opacity=100);
        transform: translate3d(0, 0, 0);
      }
    }

    .text {
      // Properties relative to the element itself.
      flex: auto;
      padding: 16px;
      background-color: rgba(248, 250, 252, 1);

      > h2 {
        // Properties relative to its container element.
        margin-bottom: 8px;
        // Properties relative to the element itself.
        font-size: 14px;
        color: rgba(101, 163, 13, 0.9);
      }

      > span {
        // Properties relative to the element itself.
        font-size: 14px;
        color: rgba(0, 0, 0, 0.9);
      }
    }
  }
}

.modal {
  // Properties relative to its container element.
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  // Properties relative to its content elements.
  display: flex;
  justify-content: center;
  align-items: center;

  > .content {
    // Properties relative to its container element.
    margin: (20px + 60px) auto 20px;
    // Properties relative to the element itself.
    z-index: 30;
    width: 75%;
    padding: 16px;
    border-radius: 8px;
    background-color: rgba(255, 255, 255, 1);

    > .general-layout {
      // Properties relative to its content elements.
      display: flex;
      flex-direction: column;

      > h2 {
        // Properties relative to its container element.
        margin-top: 16px;
        margin-bottom: 16px;
        // Properties relative to the element itself.
        text-align: center;
        font-size: 14px;
        color: rgba(0, 0, 0, 0.9);
      }

      > img {
        // Properties relative to its container element.
        margin: 0 auto;
        // Properties relative to the element itself.
        width: 100%;
        height: auto;
      }

      > p {
        // Properties relative to its container element.
        margin-top: 12px;
        // Properties relative to the element itself.
        font-size: 14px;
        color: rgba(0, 0, 0, 0.9);
      }
    }
  }

  > .overlay {
    // Properties relative to its container element.
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    // Properties relative to the element itself.
    z-index: 20;
    background: rgba(0, 0, 0, 0.4);
  }

  &.modal-fade-in {
    > .content {
      // Properties relative to the element itself.
      animation: fade-in-content 100ms ease-out;
    }

    > .overlay {
      // Properties relative to the element itself.
      animation: fade-in-overlay 100ms ease-out;
    }
  }

  &.modal-fade-out {
    > .content {
      // Properties relative to the element itself.
      animation: fade-out-content 100ms ease-in;
    }

    > .overlay {
      // Properties relative to the element itself.
      animation: fade-out-overlay 100ms ease-in;
    }
  }
}

// Layout 2: CSS media query for the design of Mobile Landscape.
@media (min-width: $BREAKPOINT1) and (max-width: $BREAKPOINT2) and (orientation: landscape) {
  .section {
    // Properties relative to its content elements.
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .modal {
    > .content {
      > .mobile-landscape-layout {
        // Properties relative to its content elements.
        display: flex;
        flex-direction: column;

        > div {
          // Properties relative to its container element.
          margin-top: 16px;
          // Properties relative to its content elements.
          display: flex;

          > div {
            > h2 {
              // Properties relative to its container element.
              margin-bottom: 16px;
              // Properties relative to the element itself.
              font-size: 14px;
              color: rgba(0, 0, 0, 0.9);
            }

            > p {
              // Properties relative to the element itself.
              font-size: 14px;
              color: rgba(0, 0, 0, 0.9);
            }
          }

          > img {
            // Properties relative to its container element.
            margin-left: 16px;
            // Properties relative to the element itself.
            width: 50%;
            height: auto;
          }
        }
      }
    }
  }
}

// Layout 3: CSS media query for the design of Tablet Portrait.
@media (min-width: $BREAKPOINT1) and (max-width: $BREAKPOINT2) and (orientation: portrait) {
  .section {
    // Properties relative to its content elements.
    grid-template-columns: repeat(3, minmax(0, 1fr));

    > div {
      > .image {
        > div {
          > h2 {
            // Properties relative to the element itself.
            font-size: 16px;
          }

          > span {
            // Properties relative to the element itself.
            font-size: 16px;
          }
        }
      }

      > .text {
        > h2 {
          // Properties relative to its container element.
          margin-bottom: 12px;
          // Properties relative to the element itself.
          font-size: 16px;
        }

        > span {
          // Properties relative to the element itself.
          font-size: 16px;
        }
      }
    }
  }

  .modal {
    .content {
      // Properties relative to its container element.
      margin: (20px + 72px) auto 20px;
      // Properties relative to the element itself.
      width: 40%;

      .general-layout {
        > h2 {
          // Properties relative to the element itself.
          font-size: 16px;
        }

        > img {
          // Properties relative to the element itself.
          width: 100%;
        }

        > p {
          // Properties relative to the element itself.
          font-size: 16px;
        }
      }
    }
  }
}

// Layout 4: CSS media query for the first design of Tablet Landscape and PC.
@media (min-width: $BREAKPOINT2) {
  .section {
    // Properties relative to the element itself.
    padding: 0;
    // Properties relative to its content elements.
    grid-template-columns: repeat(3, minmax(0, 1fr));

    > div {
      > .image {
        > div {
          > h2 {
            // Properties relative to the element itself.
            font-size: 16px;
          }

          > span {
            // Properties relative to the element itself.
            font-size: 16px;
          }
        }
      }

      > .text {
        > h2 {
          // Properties relative to its container element.
          margin-bottom: 12px;
          // Properties relative to the element itself.
          font-size: 16px;
        }

        > span {
          // Properties relative to the element itself.
          font-size: 16px;
        }
      }
    }
  }

  .modal {
    .content {
      // Properties relative to its container element.
      margin: (20px + 72px) auto 20px;
      // Properties relative to the element itself.
      width: 30%;

      .general-layout {
        > h2 {
          // Properties relative to the element itself.
          font-size: 16px;
        }

        > img {
          // Properties relative to the element itself.
          width: 100%;
        }

        > p {
          // Properties relative to the element itself.
          font-size: 16px;
        }
      }
    }
  }
}

// Layout 5: CSS media query for the second design of Tablet Landscape and PC.
@media (min-width: $BREAKPOINT3) {
}
